---
import { Image } from "astro:assets";
import Curve from "../../assets/curve.svg";
---

<footer id="other-links">
  <!-- <Image
    src={Curve}
    class="translate-y-0.5 pointer-events-none w-full"
    alt=""
  /> -->
  <div
    class="bg-main rounded-base border-2 border-border shadow-shadow p-8 m-4 lg:m-8"
  >
    <div
      class="flex lg:flex-row lg:min-h-auto min-h-96 flex-col justify-between"
    >
      <div>
        <h2 class="font-bold text-4xl lg:text-5xl mb-1 lg:mb-3">
          Dabney House
        </h2>
        <h3 class="leading-tight">1313 E California Blvd</h3>
        <h3 class="leading-tight">contact@dabney.caltech.edu</h3>
      </div>
      <div class="flex flex-col gap-6">
        <div
          class="grid grid-cols-2 gap-x-8 [&_a]:text-darb-400 [&_a]:underline [&_a]:decoration-2"
        >
          <div><a href="https://wiki.dabney.house">wiki</a></div>
          <!--
          <div><a href="https://containers.dabney.house">containers</a></div>
          <div><a href="https://idm.dabney.house">idm</a></div>
          <div><a href="https://router.dabney.house">router</a></div>
          <div><a href="https://kvm.dabney.house">kvm</a></div>
          -->
        </div>

        <div class="flex flex-col gap-2">
          <label for="scroll-speed" class="text-sm font-medium text-darb-400">
            Labelson Slider
          </label>
          <div class="flex items-center gap-3">
            <input
              type="range"
              id="scroll-speed"
              min="0.1"
              max="5"
              step="0.1"
              value="1"
              class="flex-1 h-2 bg-darb-600 rounded-lg appearance-none cursor-pointer slider"
            />
            <span
              id="speed-value"
              class="text-sm font-mono text-darb-400 min-w-[3rem]"
            >
              1.0x
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</footer>

<script>
  // Scroll Speed Controller
  class ScrollSpeedController {
    private speed: number;
    private slider: HTMLInputElement | null;
    private speedDisplay: HTMLElement | null;
    private marqueeElements: NodeListOf<Element>;
    private trackElements: NodeListOf<Element>;

    constructor() {
      this.speed = 1;
      this.slider = document.getElementById("scroll-speed") as HTMLInputElement;
      this.speedDisplay = document.getElementById("speed-value");
      this.marqueeElements = document.querySelectorAll(
        ".animate-marquee, .animate-marquee2"
      );
      this.trackElements = document.querySelectorAll(".track");

      this.init();
    }

    init(): void {
      if (this.slider && this.speedDisplay) {
        this.slider.addEventListener("input", (e: Event) => {
          const target = e.target as HTMLInputElement;
          this.speed = parseFloat(target.value);
          this.updateSpeedDisplay();
          this.updateAnimations();
        });
      }
    }

    updateSpeedDisplay(): void {
      if (this.speedDisplay) {
        this.speedDisplay.textContent = `${this.speed.toFixed(1)}x`;
      }
    }

    updateAnimations(): void {
      this.marqueeElements.forEach((element: Element) => {
        const style = element as HTMLElement;
        const baseDuration = 30; // Base duration in seconds
        const newDuration = baseDuration / this.speed;
        style.style.animationDuration = `${newDuration}s`;
      });

      this.trackElements.forEach((element: Element) => {
        const style = element as HTMLElement;
        const baseDuration = window.innerWidth >= 768 ? 60 : 30;
        const newDuration = (baseDuration / this.speed) * 0.25;
        style.style.animationDuration = `${newDuration}s`;
      });
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    new ScrollSpeedController();
  });
</script>

<style>
  .slider::-webkit-slider-thumb {
    appearance: none;
    height: 16px;
    width: 16px;
    border-radius: 50%;
    background: var(--color-darb-400);
    cursor: pointer;
    border: 2px solid var(--color-border);
  }

  .slider::-moz-range-thumb {
    height: 16px;
    width: 16px;
    border-radius: 50%;
    background: var(--color-darb-400);
    cursor: pointer;
    border: 2px solid var(--color-border);
  }
</style>
